  -------------第4章小结----------------
  js变量可以用来保存两种类型的值:基本类型值和引用类型值。基本类型的值源自一下5种
  基本数据类型:undefined，null，Boolean，number和string。基本类型值和引用类型
  值具有一下特点:
    1.基本类型值在内存中占据固定大小的空间，因此被保存在栈内存中;
    2.从一个变量向另一个变量复制基本类型的值，会创建这个值的一个副本;
    3.引用类型的值时对象，保存在堆内存中;
    4.包含引用类型的值变量实际上包含的并不是对象本身，而是一个指向该对象的指针;
    5.从一个变量向另外一个变量复制引用类型的值，复制的其实是指针，因此两个变量最
      终都指向同一个对象;
    6.确定一个值时哪种基本类型可以使用typeof操作符，而确定一个值时哪种引用类型可
      以使用instanceof操作符

  所有变量都存在一个执行环境(也称为作用域)当中，这个执行环境决定了变量的生命周期
  以及哪一部分代码可以访问其中的变量。一下关于执行环境的几点总结
    1.执行环境有全局执行环境和函数执行环境之分;
    2.每次进入一个新执行环境，都会创建一个用于搜索变量和函数的作用域链;
    3.函数的局部环境不仅有权访问函数作用域中的变量，而且有权访问其包含(父)环境，
      乃至全局环境;
    4.全局环境只能访问在全局环境中定义的变量和函数，而不能直接访问局部环境中的任
      何数据;
    5.变量的执行环境有助于确定应该何时释放内存。
  js是一门具有自动垃圾收集机制的编程语言，开发人员不必关心内存分配和回收问题。可
  以对js的垃圾收集例程作如下总结。
    1.离开作用域的值将被自动标记为可以回收，因此将在垃圾收集期间被删除。
    2."标记清除"是目前主流的垃圾收集算法，这种算法的思想是给当前不使用的值加上标
      记，然后再回收其内存。
    3.另一种垃圾收集算法是"引用计算"，这种算法的思路是跟踪记录所有只被引用的次数
      js引擎目前都不再使用这种算法;但在IE中访问非原生js对象(如dom元素)时，这种算
      法仍然可能会导致问题。
    4.当代码中存在循环引用现象是，"引用计数"算法就会导致问题。
    5.解除变量的引用不仅有助于消除循环引用对象，而且对垃圾收集也有好处。为了确保
      有效地回收内存，应该及时解除不再使用的全局对象，全局对象属性以及循环引用变量的引用