/*
  ## 在任意位置添加或删除元素
  使用`splice`方法，简单地通过指定位置/索引，就可以删除相应位置上指定数量的元素。
  ```js
  let numbers = [1, 2, 3, 4, 5, 6];
  numbers.splice(4, 2);
  console.log(numbers);
  // [ 1, 2, 3, 4 ]
  ```
  上面的代码中，删除了从索引`4`开始的`2`个元素。这就意味着`numbers[5]`，`numbers[6]`从数组中删除了。
  现在数组中的值是`1, 2, 3, 4`，`5, 6`已被移除。

  :::warning
  对于js数组和对象，还可以使用`delete`运算符删除数组中的元素，例如`delete numbers[0]`。然而，数组位置
  `0`的值变成`undefined`，也就是说，以上操作等同于`numbers[0] = undefined`。因此，我们应该始终都使用
  `splice`、`pop`或`shift`方法来删除数组元素。
  :::
  现在，把数`5, 6`插入数组里，放到之前删除元素的位置上，可以再次使用`splice`。
  ```js
  let numbers = [1, 2, 3, 4, 5, 6];
  numbers.splice(4, 2);
  console.log(numbers);
  // [ 1, 2, 3, 4 ]
  numbers.splice(4, 0, 5, 6);
  console.log(numbers);
  // [ 1, 2, 3, 4, 5, 6 ]
  ```
  `splice`方法接收的第一个参数，表示想要删除或插入的索引值。第二个参数是删除元素的个数（这个例子的目的不是删除元素，所以传入`0`）。
  第三个参数往后，就是要添加到数组中的值。输出会发现值又变成了从`1`到`6`。
*/